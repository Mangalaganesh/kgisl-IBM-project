<?xml version="1.0" encoding="UTF-8"?>
<ilog.rules.studio.model.ruleflow:RuleFlow xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:ilog.rules.studio.model.ruleflow="http://ilog.rules.studio/model/ruleflow.ecore">
  <name>locDetails Loop</name>
  <uuid>2f4bec0e-a20c-4f2a-85d7-d849aaf80c87</uuid>
  <locale>en_US</locale>
  <categories>any</categories>
  <rfModel>
<Ruleflow xmlns="http://schemas.ilog.com/Rules/7.0/Ruleflow">
  <Body>
    <TaskList>
      <StartTask Identifier="task_0"/>
      <SubflowTask Identifier="task_3" Uuid="3b2ae5c0-cda9-476b-924d-eb9f01cf8c0e">
        <InitialActions Language="irl"><![CDATA[

// stringList.clear();
 pcwGTFInd.pcwGTFIndicatorList.clear();
 //pcwScontriSum=0;]]></InitialActions>
        <FinalActions Language="irl"><![CDATA[curInterestIndex = curInterestIndex + 1;



//locDetailsRes.totSumVal=locDetailsRes.totSumVal+sumValue;



	//if(stringList!=null){
		
		if(pcwGTFInd.pcwGTFIndicatorList!=null){
if(pcwGTFInd.pcwGTFIndicatorList.contains("Y")) {
	canContinue=true;
}

else {
	canContinue=false;
	errorCode="ERR_0305";
}
}


if(productType=="GTF"){
pcwScontriSum=pcwScontriSum+intDetailsRes.sContri;
}
]]></FinalActions>
      </SubflowTask>
      <ActionTask Identifier="task_4">
        <FinalActions Language="irl"><![CDATA[curInterestIndex = 0;
intContriLocal = 0;]]></FinalActions>
        <Actions Language="irl"><![CDATA[locDetailsRes.riskCode = piamCode;
locDetailsRes.consClsCode =consClsCode;
locDetailsRes.locSumCovered=  locSumCovered;
if(productType=="GTF"){
	locDetailsRes.locContri=pcwScontriSum;
}
locDetailsRes.totNoHectares=totNoHectares;

//totbasicContri = totbasicContri + locDetailsRes.locContri;

totbasicContri = totbasicContri + locDetailsRes.locContri;
contribution.locDetails.add(locDetailsRes);

//locDetailsRes.totSumVal=locDetailsRes.totSumVal+sumValue;




]]></Actions>
      </ActionTask>
      <RuleTask ExecutionMode="Fastpath" ExitCriteria="None" Identifier="rule_0" Ordering="Default">
        <RuleList>
          <Rule Uuid="8592997a-b3de-44d8-a774-1ec824167a5a"/>
          <Rule Uuid="2008584e-d37e-4b70-af51-d63224260157"/>
          <Rule Uuid="d2740edd-d994-4bbf-9afb-fa28f933e572"/>
          <Rule Uuid="58aa0fa3-8bf1-43c7-b6e0-21efadb6039f"/>
        </RuleList>
      </RuleTask>
      <ActionTask Identifier="function_0">
        <Actions Language="irl"><![CDATA[if((productType.equals("ANNUAL")) && (riskCode==null || riskCode.equals("")))
{
  errorCode="ERR_9020";
  canContinue=false;
}
else if((productType.equals("ANNUAL")) && (consClsCode == null || consClsCode.equals("")))
{
  errorCode="ERR_9024";
  canContinue=false;
}
else if((productType.equals("ANNUAL")) && ftrInd != null && ftrInd.equals("N")){
 errorCode="ERR_9020";
  canContinue=false;
}
 
 else{
sRatePct=  FireUtil.checksRatePct (consClsCode, c1A,c1B,c2,c3);
 }



//else{
//sRatePct =  fireClassUtil.checksRatePct (consClsCode, c1A,c1B,c2,c3);
//if(sRatePct ==0){
//canContinue = false;
//errorCode = "ERR_9024";}
//else
//canContinue=true;
//}


]]></Actions>
      </ActionTask>
      <ActionTask Identifier="LTF_chk">
        <FinalActions Language="irl"><![CDATA[totbasicContri=sumCovered * sRatePct / 100; ]]></FinalActions>
        <Actions Language="irl"><![CDATA[if(planAInt==0 && planBInt==0 && planCInt==0 && planDInt==0 && planEInt==0)
{
  errorCode="ERR_9006";
  canContinue=false;
}

else{
sRatePct = fireClassUtil.checklongTmPlan (planCode ,planAInt ,planBInt,planCInt,planDInt,planEInt);
canContinue=true;
}]]></Actions>
      </ActionTask>
      <ActionTask Identifier="function_2">
        <InitialActions Language="irl"><![CDATA[curInterestIndex = 0;]]></InitialActions>
        <Actions Language="irl"><![CDATA[currentLocReq = (LocDetailRequest)location.locDetails.get(curIndex);
piamCode  = currentLocReq.riskCode;
riskCode  = currentLocReq.riskCode;
consClsCode  = currentLocReq.consClsCode;
locSumCovered = contribution.roundValue(currentLocReq.locSumCovered,2);

totNoHectares = currentLocReq.totNoHectares;

locDetailsRes = new LocDetailResponse();
locDetailsRes.intDetails = new LinkedList();
locDetailsRes.treeAgeWise= new LinkedList();

//locDetailsRes.totSumVal=0;

//stringList = new ArrayList();
pcwGTFInd = new PcwGTF();
pcwGTFInd.pcwGTFIndicatorList = new ArrayList();
]]></Actions>
      </ActionTask>
      <StopTask Identifier="task_1"/>
    </TaskList>
    <NodeList>
      <TaskNode Identifier="node_0" Task="task_0"/>
      <TaskNode Identifier="node_1" Task="task_1"/>
      <BranchNode Identifier="node_4"/>
      <TaskNode Identifier="node_5" Task="task_3"/>
      <TaskNode Identifier="node_3" Task="task_4"/>
      <TaskNode Identifier="node_6" Task="rule_0"/>
      <BranchNode Identifier="node_7"/>
      <TaskNode Identifier="node_8" Task="function_0"/>
      <TaskNode Identifier="node_9" Task="LTF_chk"/>
      <TaskNode Identifier="node_11" Task="function_2"/>
      <BranchNode Identifier="node_2"/>
    </NodeList>
    <TransitionList>
      <Transition Identifier="transition_3" Source="node_4" Target="node_3"/>
      <Transition Identifier="transition_4" Source="node_4" Target="node_5">
        <Conditions Language="irl"><![CDATA[curInterestIndex < currentLocReq.intDetails.size()]]></Conditions>
      </Transition>
      <Transition Identifier="transition_2" Source="node_3" Target="node_1"/>
      <Transition Identifier="transition_8" Source="node_7" Target="node_9">
        <Conditions Language="irl"><![CDATA[productType.equals( "LTF")]]></Conditions>
      </Transition>
      <Transition Identifier="transition_7" Source="node_7" Target="node_8"/>
      <Transition Identifier="transition_13" Source="node_0" Target="node_11"/>
      <Transition Identifier="transition_14" Source="node_11" Target="node_6"/>
      <Transition Identifier="transition_0" Source="node_6" Target="node_7"/>
      <Transition Identifier="transition_1" Source="node_8" Target="node_4"/>
      <Transition Identifier="transition_9" Source="node_7" Target="node_4">
        <Conditions Language="irl"><![CDATA[(productCode.equals("FR05W")) ||  (productCode.equals("FR07W")) || (productCode.equals("FR08W"))]]></Conditions>
      </Transition>
      <Transition Identifier="transition_5" Source="node_9" Target="node_1"/>
      <Transition Identifier="transition_11" Source="node_5" Target="node_2"/>
      <Transition Identifier="transition_12" Source="node_2" Target="node_4"/>
      <Transition Identifier="transition_6" Source="node_2" Target="node_1">
        <Conditions Language="bal"><![CDATA[canContinue is false]]></Conditions>
      </Transition>
      <Transition Identifier="transition_10" Source="node_8" Target="node_1">
        <Conditions Language="bal"><![CDATA[canContinue is false]]></Conditions>
      </Transition>
    </TransitionList>
  </Body>
  <Resources>
    <ResourceSet Locale="en_US">
      <Data Name="node_7#y">236.81818</Data>
      <Data Name="node_8#x">225.39337</Data>
      <Data Name="node_8#y">331.81818</Data>
      <Data Name="node_9#x">398.23245</Data>
      <Data Name="node_5#name">node_5</Data>
      <Data Name="node_9#y">491.81818</Data>
      <Data Name="node_2#name">node_2</Data>
      <Data Name="node_6#label">Contribution Table</Data>
      <Data Name="node_11#height">53.402344</Data>
      <Data Name="node_3#label">Adding LocDetailResponse</Data>
      <Data Name="node_8#height">53.402344</Data>
      <Data Name="node_11#x">218.91235</Data>
      <Data Name="node_11#y">80.81818</Data>
      <Data Name="node_4#x">180.55426</Data>
      <Data Name="node_3#y">571.8182</Data>
      <Data Name="node_8#label">sRate Task</Data>
      <Data Name="node_4#y">411.81818</Data>
      <Data Name="node_5#x">220.89603</Data>
      <Data Name="node_5#y">491.81818</Data>
      <Data Name="node_6#x">241.31784</Data>
      <Data Name="node_6#y">156.81818</Data>
      <Data Name="node_7#x">301.06003</Data>
      <Data Name="node_0#x">306.06003</Data>
      <Data Name="node_11#name">node_11</Data>
      <Data Name="node_0#y">6.8181763</Data>
      <Data Name="node_1#x">295.60663</Data>
      <Data Name="node_8#name">node_8</Data>
      <Data Name="node_1#y">666.8182</Data>
      <Data Name="node_2#x">260.05893</Data>
      <Data Name="node_3#x">5.7464294</Data>
      <Data Name="node_2#y">571.8182</Data>
      <Data Name="transition_4#label">IntDetailRequest  Size</Data>
      <Data Name="node_11#label">Assign LocDetailRequest</Data>
      <Data Name="node_7#label">Condition</Data>
      <Data Name="node_1#name">node_1</Data>
      <Data Name="node_5#label">IntDetailsLoop</Data>
      <Data Name="node_2#label">Condition</Data>
      <Data Name="node_11#width">136.73828</Data>
      <Data Name="node_4#name">node_4</Data>
      <Data Name="node_8#width">102.0</Data>
      <Data Name="node_7#name">node_7</Data>
      <Data Name="node_6#name">node_6</Data>
      <Data Name="node_9#name">node_9</Data>
      <Data Name="node_0#name">node_0</Data>
      <Data Name="node_9#label">LONG Calc</Data>
      <Data Name="node_3#name">node_3</Data>
    </ResourceSet>
  </Resources>
  <Properties>
    <imports><![CDATA[import fire.LocationDetailsResponse;
import java.util.ArrayList;
use locDetails;
import fire.LocDetailResponse;
use locSumCovered;
use compGrossContri;
use currentIntDetail;
use curInterestIndex;
use currentItem;
import fire.LocDetailRequest;
use feaDiscount;
use intDetailsReq;
use yearDays;
use locDetailsRes;
import java.util.LinkedList;
use currIndextreeAge;
use fireClass;
import fire.FireUtil;
use fireClassUtil;
use piamCode;
use c1A;
use consClsCode;
use canContinue;
use riskType;
use productType;
use productCode;
use errorDesc;
import fire.Contribution;
use contribution;
use errorCode;
use totbasicContri;
use sumCovered;
use sRatePct;
use ftrInd;
use c1B;
use c2;
use c3;
use planAInt;
use planBInt;
use planCInt;
use planDInt;
use planEInt;
use riskCode;
use currentLocReq;
use curIndex;
use intContriLocal;
use planCode;
use location;
use contriInd;
use sumValue;
use totNoHectares;
use stringList;
use pcwContri;
use pcwContriLocal;
use pcwScontriSum;
use pcwGTFInd;
import fire.PcwGTF;
]]></imports>
  </Properties>
</Ruleflow>
</rfModel>
</ilog.rules.studio.model.ruleflow:RuleFlow>
